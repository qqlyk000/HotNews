
    <!--第三节课，这个不加会报错-->
    <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.3.1</version>
    </dependency>

    由于项目讲解时是16年，前端使用的是velocity模板引擎，在spring boot1.5之后已经遭到弃用，
    而笔者在start.sprintg.io中下载的spring boot版本为2.1.4,因此没有集成velocity相关的依赖，导致很多不兼容问题出现。
    项目中写好前端代码是使用velocity语言，因此我们要通过以下方式引入velocity相关的依赖。

    1.在pom.xml文件中加入以下代码：
    <dependency>
       <groupId>org.springframework.boot</groupId>
       <artifactId>spring-boot-starter-velocity</artifactId>
       <version>1.1.3.RELEASE</version>
    </dependency>
    <dependency>
       <groupId>org.apache.velocity</groupId>
       <artifactId>velocity-engine-core</artifactId>
       <version>2.0</version>
    </dependency>
    <dependency>
       <groupId>org.apache.velocity</groupId>
       <artifactId>velocity-tools</artifactId>
       <version>1.4</version>
    </dependency>

    2.将spring boot的版本改到1.5以下：
    <parent>
       <groupId>org.springframework.boot</groupId>
       <artifactId>spring-boot-starter-parent</artifactId>
       <version>1.4.0.RELEASE</version>
       <relativePath/> <!-- lookup parent from repository -->
    </parent>

    3.在配置文件中加入velocity配置信息
    spring.velocity.suffix=.html
    spring.velocity.cache=false
    spring.velocity.toolbox-config-location=toolbox.xml

    4.在main/resource目录下添加toolbox.xml文件

    问题：
        org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.hotnews.dao.NewsDao.selectByUserIdAndOffset
    原因：
        要确保target文件目录下的Dao接口和Dao.xml文件在同一文件夹下
    解决：
        pom.xml下配置
        <!--解决Intellij构建项目时，target/classes目录下不存在mapper.xml文件-->
        <resources>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>


    问题：
        凡是有#if($user)的地方都不显示，按理说应该是判断是否登录，可现在无法验证是否登录，header.html不显示分享和站内信,登录后不跳转
    原因：
        初步认为是#if ($user)判断有误，或者是无法确认用户是否登录，因为登录后提示报错无法登录
        或者class="" 内无内容
    解决：
        暂无。可以尝试换一下if 和else 里的内容,

    问题：
        logout无法登出用户
    原因：
        springboot抛弃vm导致的渲染问题
    解决：
        更改maven仓库镜像下载地址为阿里云即可，默认官网的maven仓库中已不存在过去的版本，阿里云里有
    备注：
        此问题和上面问题一样，前后端交接问题，因为对前端不太熟悉，导致花费很长时间。自此，velocity模板问题暂时解决。
        如需要后期会更新模板重做前端或对其进行修改。目前主要执行后端逻辑操作

    问题：
        图片暂时上传错误，上传云文件出错
    原因：
        上传时云文件服务器选择错误，并且上传文件的方法应用POST
    解决：
        更改method与云仓库服务器域名

    问题：
        踩赞功能暂时不可用，前端点击按钮没反应
    原因：
        疑似前端按钮处理逻辑问题
    解决：

    问题:
        今天看了一篇文章，说在mysql中用utf8mb4代替utf8会少很多错误，尝试后连接数据库时报错
        Unsupported character encoding 'utf8mb4'.
    原因:
        猜测可能是版本问题，目前使用的是mysql5.7版本
    解决:
        暂不考虑解决，因为文章说这是遗留问题，但是在5.7版本并不适用，如果是8.0版本特有的问题就不能叫遗留。
        真实性存疑，下次使用更高版本会首先试用utf8mb4编码，如若不行则遗忘该文章
        https://medium.com/@adamhooper/in-mysql-never-use-utf8-use-utf8mb4-11761243e434

    <repositories>
    		<repository>
    			<id>alimaven</id>
    			<name>aliyun maven</name>
    			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
    			<releases>
    				<enabled>true</enabled>
    			</releases>
    			<snapshots>
    				<enabled>false</enabled>
    			</snapshots>
    		</repository>
    	</repositories>

    	<!--解决Intellij构建项目时，target/classes目录下不存在mapper.xml文件-->
        		<resources>
        			<resource>
        				<directory>${basedir}/src/main/java</directory>
        				<includes>
        					<include>**/*.xml</include>
        				</includes>
        			</resource>
        		</resources>
        	</build>

        	<?xml version="1.0" encoding="UTF-8"?>
            <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
            	<modelVersion>4.0.0</modelVersion>

            	<groupId>com.hotnews</groupId>
            	<artifactId>HotNews</artifactId>
            	<version>0.0.1-SNAPSHOT</version>
            	<packaging>jar</packaging>

            	<name>HotNews</name>
            	<description>Demo project for Spring Boot</description>